{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/ibommaflix/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\nimport { Modal, Box, Typography, Button } from \"@mui/material\"; // Material-UI Modal\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CustomNavbar from \"../components/Navbar\";\nimport MovieCarousel from \"../components/MovieCarousel\";\nimport SearchBar from \"../components/SearchBar\"; // Import SearchBar\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [tollywoodMoviesData, setTollywoodMoviesData] = useState([]);\n  const [bollywoodMoviesData, setBollywoodMoviesData] = useState([]);\n  const [hollywoodMoviesData, setHollywoodMoviesData] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [movie, setMovie] = useState(null);\n  const [verdict, setVerdict] = useState(\"Fetching Verdict...\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n  // Fetch Exactly 5 Valid Movie Posters with Caching\n  const fetchMoviesData = useCallback(async movies => {\n    try {\n      const cacheKey = `movies_${movies[0]}`; // Unique cache key based on the first movie\n      const cachedData = localStorage.getItem(cacheKey);\n      if (cachedData) {\n        // If cached data exists, use it\n        return JSON.parse(cachedData);\n      }\n      let validMovies = [];\n      let retries = 0; // Retry counter\n\n      while (validMovies.length < 5 && retries < 10) {\n        let uniqueMovies = new Set();\n        while (uniqueMovies.size < 5) {\n          uniqueMovies.add(movies[Math.floor(Math.random() * movies.length)]);\n        }\n        const selectedMovies = Array.from(uniqueMovies);\n        const movieRequests = selectedMovies.map(title => axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`));\n        const responses = await Promise.all(movieRequests);\n        validMovies = responses.filter(res => res.data.Response === \"True\" && res.data.Poster !== \"N/A\").map(res => ({\n          title: res.data.Title,\n          year: res.data.Year,\n          poster: res.data.Poster,\n          imdbRating: res.data.imdbRating // Capture imdbRating\n        }));\n        retries++;\n      }\n\n      // If still less than 5, fill the rest with a generic movie poster\n      while (validMovies.length < 5) {\n        validMovies.push({\n          title: \"Coming Soon\",\n          year: \"N/A\",\n          poster: \"https://via.placeholder.com/160x250?text=Coming+Soon\"\n        });\n      }\n\n      // Cache the fetched data for future use\n      localStorage.setItem(cacheKey, JSON.stringify(validMovies));\n      return validMovies;\n    } catch {\n      return [];\n    }\n  }, [OMDB_API_KEY]);\n  useEffect(() => {\n    const loadMovies = async () => {\n      setTollywoodMoviesData(await fetchMoviesData(tollywoodMovies));\n      setBollywoodMoviesData(await fetchMoviesData(bollywoodMovies));\n      setHollywoodMoviesData(await fetchMoviesData(hollywoodMovies));\n    };\n    loadMovies();\n  }, [fetchMoviesData]);\n\n  // Calculate the Verdict based on IMDb Rating\n  const getVerdict = rating => {\n    if (!rating || rating === \"N/A\") return \"Rating unavailable\";\n    const imdbRating = parseFloat(rating);\n    if (imdbRating < 5) {\n      return \"Not worth watching\";\n    } else if (imdbRating >= 5 && imdbRating <= 6.5) {\n      return \"Average\";\n    } else if (imdbRating > 6.5 && imdbRating <= 8) {\n      return \"Good to watch\";\n    } else {\n      return \"Worth watching\";\n    }\n  };\n\n  // Fetch Movie Data for Search\n  const fetchMovie = async searchTerm => {\n    if (!searchTerm) return;\n    try {\n      const cacheKey = `movie_${searchTerm}`;\n      const cachedData = localStorage.getItem(cacheKey);\n      if (cachedData) {\n        // If cached data exists, use it\n        const movieData = JSON.parse(cachedData);\n        setMovie(movieData);\n        setVerdict(getVerdict(movieData.imdbRating)); // Calculate verdict\n        setIsModalOpen(true);\n      } else {\n        const res = await axios.get(`https://www.omdbapi.com/?t=${searchTerm}&apikey=${OMDB_API_KEY}`);\n        if (res.data.Response === \"True\") {\n          const movieData = res.data;\n          setMovie(movieData);\n          setVerdict(getVerdict(movieData.imdbRating)); // Calculate verdict\n          localStorage.setItem(cacheKey, JSON.stringify(movieData)); // Cache the data\n          setIsModalOpen(true);\n        } else {\n          alert(\"Movie not found!\");\n        }\n      }\n    } catch {\n      alert(\"Error fetching movie data!\");\n    }\n  };\n\n  // Close Modal and Reset Inputs\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setMovie(null);\n    setVerdict(\"Fetching Verdict...\");\n    setSearchInput(\"\"); // Clears search input when modal is closed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 text-center\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: fetchMovie,\n        searchInput: searchInput,\n        setSearchInput: setSearchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"tagline-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"tagline-heading\",\n        children: \"Where Quality & Clarity Matters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tagline-text\",\n        children: \"Watch Tollywood, Bollywood, Hollywood movies in HD, exclusively available on iBommaFlix.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"movie-sections\",\n      children: [{\n        title: \"Tollywood Movies\",\n        data: tollywoodMoviesData\n      }, {\n        title: \"Bollywood Movies\",\n        data: bollywoodMoviesData\n      }, {\n        title: \"Hollywood Movies\",\n        data: hollywoodMoviesData\n      }].map((category, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-gold text-center\",\n          children: category.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-group\",\n          children: category.data.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.poster,\n              alt: movie.title,\n              className: \"poster-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"play-button\",\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"poster-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"poster-year\",\n              children: movie.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isModalOpen,\n      onClose: closeModal // Updated to use closeModal\n      ,\n      \"aria-labelledby\": \"movie-modal-title\",\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"modal-box\",\n        sx: {\n          bgcolor: \"black\",\n          color: \"white\",\n          p: 3,\n          borderRadius: 2,\n          width: 500,\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"movie-modal-title\",\n          variant: \"h5\",\n          sx: {\n            fontWeight: \"bold\",\n            mb: 2\n          },\n          children: [movie === null || movie === void 0 ? void 0 : movie.Title, \" (\", movie === null || movie === void 0 ? void 0 : movie.Year, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie === null || movie === void 0 ? void 0 : movie.Poster,\n          alt: movie === null || movie === void 0 ? void 0 : movie.Title,\n          className: \"movie-modal-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 54\n          }, this), \" \", movie === null || movie === void 0 ? void 0 : movie.Genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IMDb Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 39\n          }, this), \" \", movie === null || movie === void 0 ? void 0 : movie.imdbRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 39\n          }, this), \" \", movie === null || movie === void 0 ? void 0 : movie.Plot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: \"gold\",\n            mt: 2\n          },\n          children: verdict\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: closeModal // Updated to use closeModal\n          ,\n          sx: {\n            mt: 2\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Mmb/mpetpj+Y54j+vDaLntGoUhE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Container","Modal","Box","Typography","Button","CustomNavbar","MovieCarousel","SearchBar","tollywoodMovies","bollywoodMovies","hollywoodMovies","jsxDEV","_jsxDEV","Home","_s","tollywoodMoviesData","setTollywoodMoviesData","bollywoodMoviesData","setBollywoodMoviesData","hollywoodMoviesData","setHollywoodMoviesData","searchInput","setSearchInput","movie","setMovie","verdict","setVerdict","isModalOpen","setIsModalOpen","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","fetchMoviesData","movies","cacheKey","cachedData","localStorage","getItem","JSON","parse","validMovies","retries","length","uniqueMovies","Set","size","add","Math","floor","random","selectedMovies","Array","from","movieRequests","map","title","get","responses","Promise","all","filter","res","data","Response","Poster","Title","year","Year","poster","imdbRating","push","setItem","stringify","loadMovies","getVerdict","rating","parseFloat","fetchMovie","searchTerm","movieData","alert","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","category","i","index","src","alt","open","onClose","sx","display","alignItems","justifyContent","bgcolor","color","p","borderRadius","width","textAlign","id","variant","fontWeight","mb","mt","Genre","Plot","onClick","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/ibommaflix/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\nimport { Modal, Box, Typography, Button } from \"@mui/material\"; // Material-UI Modal\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CustomNavbar from \"../components/Navbar\";\nimport MovieCarousel from \"../components/MovieCarousel\";\nimport SearchBar from \"../components/SearchBar\"; // Import SearchBar\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const [tollywoodMoviesData, setTollywoodMoviesData] = useState([]);\n  const [bollywoodMoviesData, setBollywoodMoviesData] = useState([]);\n  const [hollywoodMoviesData, setHollywoodMoviesData] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [movie, setMovie] = useState(null);\n  const [verdict, setVerdict] = useState(\"Fetching Verdict...\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n  // Fetch Exactly 5 Valid Movie Posters with Caching\n  const fetchMoviesData = useCallback(async (movies) => {\n    try {\n      const cacheKey = `movies_${movies[0]}`; // Unique cache key based on the first movie\n      const cachedData = localStorage.getItem(cacheKey);\n\n      if (cachedData) {\n        // If cached data exists, use it\n        return JSON.parse(cachedData);\n      }\n\n      let validMovies = [];\n      let retries = 0; // Retry counter\n\n      while (validMovies.length < 5 && retries < 10) {\n        let uniqueMovies = new Set();\n        while (uniqueMovies.size < 5) {\n          uniqueMovies.add(movies[Math.floor(Math.random() * movies.length)]);\n        }\n\n        const selectedMovies = Array.from(uniqueMovies);\n        const movieRequests = selectedMovies.map((title) =>\n          axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`)\n        );\n        const responses = await Promise.all(movieRequests);\n\n        validMovies = responses\n          .filter((res) => res.data.Response === \"True\" && res.data.Poster !== \"N/A\")\n          .map((res) => ({\n            title: res.data.Title,\n            year: res.data.Year,\n            poster: res.data.Poster,\n            imdbRating: res.data.imdbRating, // Capture imdbRating\n          }));\n\n        retries++;\n      }\n\n      // If still less than 5, fill the rest with a generic movie poster\n      while (validMovies.length < 5) {\n        validMovies.push({\n          title: \"Coming Soon\",\n          year: \"N/A\",\n          poster: \"https://via.placeholder.com/160x250?text=Coming+Soon\",\n        });\n      }\n\n      // Cache the fetched data for future use\n      localStorage.setItem(cacheKey, JSON.stringify(validMovies));\n\n      return validMovies;\n    } catch {\n      return [];\n    }\n  }, [OMDB_API_KEY]);\n\n  useEffect(() => {\n    const loadMovies = async () => {\n      setTollywoodMoviesData(await fetchMoviesData(tollywoodMovies));\n      setBollywoodMoviesData(await fetchMoviesData(bollywoodMovies));\n      setHollywoodMoviesData(await fetchMoviesData(hollywoodMovies));\n    };\n    loadMovies();\n  }, [fetchMoviesData]);\n\n  // Calculate the Verdict based on IMDb Rating\n  const getVerdict = (rating) => {\n    if (!rating || rating === \"N/A\") return \"Rating unavailable\";\n\n    const imdbRating = parseFloat(rating);\n    if (imdbRating < 5) {\n      return \"Not worth watching\";\n    } else if (imdbRating >= 5 && imdbRating <= 6.5) {\n      return \"Average\";\n    } else if (imdbRating > 6.5 && imdbRating <= 8) {\n      return \"Good to watch\";\n    } else {\n      return \"Worth watching\";\n    }\n  };\n\n  // Fetch Movie Data for Search\n  const fetchMovie = async (searchTerm) => {\n    if (!searchTerm) return;\n    try {\n      const cacheKey = `movie_${searchTerm}`;\n      const cachedData = localStorage.getItem(cacheKey);\n\n      if (cachedData) {\n        // If cached data exists, use it\n        const movieData = JSON.parse(cachedData);\n        setMovie(movieData);\n        setVerdict(getVerdict(movieData.imdbRating)); // Calculate verdict\n        setIsModalOpen(true);\n      } else {\n        const res = await axios.get(`https://www.omdbapi.com/?t=${searchTerm}&apikey=${OMDB_API_KEY}`);\n        if (res.data.Response === \"True\") {\n          const movieData = res.data;\n          setMovie(movieData);\n          setVerdict(getVerdict(movieData.imdbRating)); // Calculate verdict\n          localStorage.setItem(cacheKey, JSON.stringify(movieData)); // Cache the data\n          setIsModalOpen(true);\n        } else {\n          alert(\"Movie not found!\");\n        }\n      }\n    } catch {\n      alert(\"Error fetching movie data!\");\n    }\n  };\n\n  // Close Modal and Reset Inputs\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setMovie(null);\n    setVerdict(\"Fetching Verdict...\");\n    setSearchInput(\"\"); // Clears search input when modal is closed\n  };\n\n  return (\n    <div>\n      <CustomNavbar />\n      <MovieCarousel />\n\n      {/* Search Bar */}\n      <Container className=\"mt-3 text-center\">\n        <SearchBar onSearch={fetchMovie} searchInput={searchInput} setSearchInput={setSearchInput} />\n      </Container>\n\n      {/* Tagline */}\n      <Container className=\"tagline-container\">\n        <h2 className=\"tagline-heading\">Where Quality & Clarity Matters</h2>\n        <p className=\"tagline-text\">\n          Watch Tollywood, Bollywood, Hollywood movies in HD, exclusively available on iBommaFlix.\n        </p>\n      </Container>\n\n      {/* Movie Sections (Ensures Exactly 5 Posters per Industry) */}\n      <Container className=\"movie-sections\">\n        {[{ title: \"Tollywood Movies\", data: tollywoodMoviesData },\n          { title: \"Bollywood Movies\", data: bollywoodMoviesData },\n          { title: \"Hollywood Movies\", data: hollywoodMoviesData }].map((category, i) => (\n          <div key={i} className=\"movie-category\">\n            <h2 className=\"text-gold text-center\">{category.title}</h2>\n            <div className=\"poster-group\">\n              {category.data.map((movie, index) => (\n                <div key={index} className=\"poster-card\">\n                  <img src={movie.poster} alt={movie.title} className=\"poster-img\" />\n                  <div className=\"play-button\">▶</div>\n                  <p className=\"poster-title\">{movie.title}</p>\n                  <p className=\"poster-year\">{movie.year}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </Container>\n\n      {/* Material-UI Movie Popup Modal */}\n      <Modal\n        open={isModalOpen}\n        onClose={closeModal} // Updated to use closeModal\n        aria-labelledby=\"movie-modal-title\"\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Box\n          className=\"modal-box\"\n          sx={{\n            bgcolor: \"black\",\n            color: \"white\",\n            p: 3,\n            borderRadius: 2,\n            width: 500,\n            textAlign: \"center\",\n          }}\n        >\n          <Typography id=\"movie-modal-title\" variant=\"h5\" sx={{ fontWeight: \"bold\", mb: 2 }}>\n            {movie?.Title} ({movie?.Year})\n          </Typography>\n          <img src={movie?.Poster} alt={movie?.Title} className=\"movie-modal-img\" />\n          <Typography variant=\"body1\" sx={{ mt: 2 }}><strong>Genre:</strong> {movie?.Genre}</Typography>\n          <Typography variant=\"body1\"><strong>IMDb Rating:</strong> {movie?.imdbRating}</Typography>\n          <Typography variant=\"body1\"><strong>Plot:</strong> {movie?.Plot}</Typography>\n          <Typography variant=\"h6\" sx={{ color: \"gold\", mt: 2 }}>{verdict}</Typography>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={closeModal} // Updated to use closeModal\n            sx={{ mt: 2 }}\n          >\n            Close\n          </Button>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}