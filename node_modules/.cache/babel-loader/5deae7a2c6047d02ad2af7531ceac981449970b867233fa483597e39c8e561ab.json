{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport axios from \"axios\";\nimport \"./MovieCarousel.css\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCarousel = () => {\n  _s();\n  const [moviePosters, setMoviePosters] = useState([]);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY; // Load API key from .env\n\n  useEffect(() => {\n    const fetchPosters = async () => {\n      if (!OMDB_API_KEY) {\n        console.error(\"OMDB API Key is missing. Check your .env file.\");\n        return;\n      }\n      try {\n        const getRandomMovies = (movies, count) => movies.sort(() => Math.random() - 0.5).slice(0, count);\n        const selectedMovies = [...getRandomMovies(tollywoodMovies, 15), ...getRandomMovies(bollywoodMovies, 15), ...getRandomMovies(hollywoodMovies, 15)];\n        const posterRequests = selectedMovies.map(title => axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`));\n        const responses = await Promise.all(posterRequests);\n        const posters = responses.filter(res => res.data.Response === \"True\" && res.data.Poster !== \"N/A\").map(res => res.data.Poster);\n        setMoviePosters(posters);\n      } catch (error) {\n        console.error(\"Error fetching movie posters from OMDb:\", error);\n      }\n    };\n    fetchPosters();\n  }, []); // Removed OMDB_API_KEY from dependency array to avoid warning\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 2000,\n    slidesToShow: 5,\n    slidesToScroll: 2,\n    autoplay: true,\n    autoplaySpeed: 2000\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-slider\",\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      ...settings,\n      children: moviePosters.length > 0 ? moviePosters.map((poster, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: \"Movie Poster\",\n          className: \"poster-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-text\",\n        children: \"Loading posters...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCarousel, \"YI0iqAzJgdp4vxYqR3oACm2b7us=\");\n_c = MovieCarousel;\nexport default MovieCarousel;\nvar _c;\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"names":["React","useEffect","useState","Slider","axios","tollywoodMovies","bollywoodMovies","hollywoodMovies","jsxDEV","_jsxDEV","MovieCarousel","_s","moviePosters","setMoviePosters","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","fetchPosters","console","error","getRandomMovies","movies","count","sort","Math","random","slice","selectedMovies","posterRequests","map","title","get","responses","Promise","all","posters","filter","res","data","Response","Poster","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","className","children","length","poster","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCarousel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport axios from \"axios\";\nimport \"./MovieCarousel.css\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\n\nconst MovieCarousel = () => {\n  const [moviePosters, setMoviePosters] = useState([]);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY; // Load API key from .env\n\n  useEffect(() => {\n    const fetchPosters = async () => {\n      if (!OMDB_API_KEY) {\n        console.error(\"OMDB API Key is missing. Check your .env file.\");\n        return;\n      }\n\n      try {\n        const getRandomMovies = (movies, count) =>\n          movies.sort(() => Math.random() - 0.5).slice(0, count);\n\n        const selectedMovies = [\n          ...getRandomMovies(tollywoodMovies, 15),\n          ...getRandomMovies(bollywoodMovies, 15),\n          ...getRandomMovies(hollywoodMovies, 15)\n        ];\n\n        const posterRequests = selectedMovies.map((title) =>\n          axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`)\n        );\n\n        const responses = await Promise.all(posterRequests);\n\n        const posters = responses\n          .filter(res => res.data.Response === \"True\" && res.data.Poster !== \"N/A\")\n          .map(res => res.data.Poster);\n\n        setMoviePosters(posters);\n      } catch (error) {\n        console.error(\"Error fetching movie posters from OMDb:\", error);\n      }\n    };\n\n    fetchPosters();\n  }, []); // Removed OMDB_API_KEY from dependency array to avoid warning\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 2000,\n    slidesToShow: 5,\n    slidesToScroll: 2,\n    autoplay: true,\n    autoplaySpeed: 2000\n  };\n\n  return (\n    <div className=\"movie-slider\">\n      <Slider {...settings}>\n        {moviePosters.length > 0 ? (\n          moviePosters.map((poster, index) => (\n            <div key={index} className=\"poster-container\">\n              <img src={poster} alt=\"Movie Poster\" className=\"poster-img\" />\n            </div>\n          ))\n        ) : (\n          <p className=\"loading-text\">Loading posters...</p>\n        )}\n      </Slider>\n    </div>\n  );\n};\n\nexport default MovieCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}