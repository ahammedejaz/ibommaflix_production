{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Carousel } from \"react-bootstrap\"; // ✅ Bootstrap Carousel\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // ✅ Ensure Bootstrap is loaded\nimport \"./MovieCarousel.css\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCarousel = () => {\n  _s();\n  const [moviePosters, setMoviePosters] = useState([]);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY; // ✅ Load API key from .env\n\n  useEffect(() => {\n    const fetchPosters = async () => {\n      if (!OMDB_API_KEY) {\n        console.error(\"OMDB API Key is missing. Check your .env file.\");\n        return;\n      }\n      try {\n        const getRandomMovies = (movies, count) => movies.sort(() => Math.random() - 0.5).slice(0, count);\n        const selectedMovies = [...getRandomMovies(tollywoodMovies, 10), ...getRandomMovies(bollywoodMovies, 10), ...getRandomMovies(hollywoodMovies, 10)];\n        const posterRequests = selectedMovies.map(title => axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`));\n        const responses = await Promise.all(posterRequests);\n        const posters = responses.filter(res => res.data.Response === \"True\" && res.data.Poster !== \"N/A\").map(res => ({\n          poster: res.data.Poster,\n          title: res.data.Title,\n          year: res.data.Year\n        }));\n        setMoviePosters(posters);\n      } catch (error) {\n        console.error(\"Error fetching movie posters from OMDb:\", error);\n      }\n    };\n    fetchPosters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-carousel\",\n    children: moviePosters.length > 0 ? /*#__PURE__*/_jsxDEV(Carousel, {\n      controls: true,\n      indicators: false,\n      interval: 2500,\n      \"data-bs-theme\": \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Carousel.Item, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-container\",\n          children: moviePosters.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-movie\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"poster-img\",\n              src: movie.poster,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-title\",\n              children: [movie.title, \" (\", movie.year, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"Loading posters...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCarousel, \"YI0iqAzJgdp4vxYqR3oACm2b7us=\");\n_c = MovieCarousel;\nexport default MovieCarousel;\nvar _c;\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"names":["React","useEffect","useState","axios","Carousel","tollywoodMovies","bollywoodMovies","hollywoodMovies","jsxDEV","_jsxDEV","MovieCarousel","_s","moviePosters","setMoviePosters","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","fetchPosters","console","error","getRandomMovies","movies","count","sort","Math","random","slice","selectedMovies","posterRequests","map","title","get","responses","Promise","all","posters","filter","res","data","Response","Poster","poster","Title","year","Year","className","children","length","controls","indicators","interval","Item","movie","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCarousel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Carousel } from \"react-bootstrap\"; // ✅ Bootstrap Carousel\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // ✅ Ensure Bootstrap is loaded\nimport \"./MovieCarousel.css\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\n\nconst MovieCarousel = () => {\n  const [moviePosters, setMoviePosters] = useState([]);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY; // ✅ Load API key from .env\n\n  useEffect(() => {\n    const fetchPosters = async () => {\n      if (!OMDB_API_KEY) {\n        console.error(\"OMDB API Key is missing. Check your .env file.\");\n        return;\n      }\n\n      try {\n        const getRandomMovies = (movies, count) =>\n          movies.sort(() => Math.random() - 0.5).slice(0, count);\n\n        const selectedMovies = [\n          ...getRandomMovies(tollywoodMovies, 10),\n          ...getRandomMovies(bollywoodMovies, 10),\n          ...getRandomMovies(hollywoodMovies, 10)\n        ];\n\n        const posterRequests = selectedMovies.map((title) =>\n          axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`)\n        );\n\n        const responses = await Promise.all(posterRequests);\n\n        const posters = responses\n          .filter(res => res.data.Response === \"True\" && res.data.Poster !== \"N/A\")\n          .map(res => ({\n            poster: res.data.Poster,\n            title: res.data.Title,\n            year: res.data.Year\n          }));\n\n        setMoviePosters(posters);\n      } catch (error) {\n        console.error(\"Error fetching movie posters from OMDb:\", error);\n      }\n    };\n\n    fetchPosters();\n  }, []);\n\n  return (\n    <div className=\"movie-carousel\">\n      {moviePosters.length > 0 ? (\n        <Carousel controls={true} indicators={false} interval={2500} data-bs-theme=\"dark\">\n          <Carousel.Item>\n            <div className=\"carousel-container\">\n              {moviePosters.map((movie, index) => (\n                <div key={index} className=\"carousel-movie\">\n                  <img className=\"poster-img\" src={movie.poster} alt={movie.title} />\n                  <p className=\"movie-title\">{movie.title} ({movie.year})</p>\n                </div>\n              ))}\n            </div>\n          </Carousel.Item>\n        </Carousel>\n      ) : (\n        <p className=\"loading-text\">Loading posters...</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}