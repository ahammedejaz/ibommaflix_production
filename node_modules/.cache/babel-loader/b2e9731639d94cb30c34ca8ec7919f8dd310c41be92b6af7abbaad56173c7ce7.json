{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nimport CustomNavbar from \"../components/Navbar\";\nimport MovieCarousel from \"../components/MovieCarousel\";\nimport SearchBar from \"../components/SearchBar\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport \"./Home.css\";\n\n// Set Modal Root\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst Home = () => {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const [verdict, setVerdict] = useState(\"Fetching Verdict...\");\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n  // ✅ Fetch only 2024 movies\n  const filter2024Movies = movies => {\n    return movies.filter(title => title.includes(\"2024\")).slice(0, 5);\n  };\n\n  // ✅ Load Movie Data\n  useEffect(() => {\n    const fetchMoviesData = async movies => {\n      try {\n        const filteredMovies = filter2024Movies(movies);\n        const movieRequests = filteredMovies.map(title => axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`));\n        const responses = await Promise.all(movieRequests);\n        return responses.filter(res => res.data.Response === \"True\" && res.data.Poster !== \"N/A\").map(res => ({\n          title: res.data.Title,\n          year: res.data.Year,\n          poster: res.data.Poster\n        }));\n      } catch (error) {\n        console.error(\"Error fetching movie data from OMDb:\", error);\n        return [];\n      }\n    };\n    const loadMovies = async () => {\n      setTollywoodMoviesData(await fetchMoviesData(tollywoodMovies));\n      setBollywoodMoviesData(await fetchMoviesData(bollywoodMovies));\n      setHollywoodMoviesData(await fetchMoviesData(hollywoodMovies));\n    };\n    loadMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: fetchMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grids\",\n      children: [{\n        title: \"Tollywood Movies\",\n        movies: tollywoodMoviesData\n      }, {\n        title: \"Bollywood Movies\",\n        movies: bollywoodMoviesData\n      }, {\n        title: \"Hollywood Movies\",\n        movies: hollywoodMoviesData\n      }].map((category, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"grid-title\",\n          children: category.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-list\",\n          children: category.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.poster,\n              alt: movie.title,\n              className: \"movie-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"movie-title\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"movie-year\",\n                children: movie.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"fRAQDPptb7ZloTHn2QS0YXQfefw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","CustomNavbar","MovieCarousel","SearchBar","tollywoodMovies","bollywoodMovies","hollywoodMovies","jsxDEV","_jsxDEV","setAppElement","Home","_s","movie","setMovie","verdict","setVerdict","loading","setLoading","isModalOpen","setIsModalOpen","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","filter2024Movies","movies","filter","title","includes","slice","fetchMoviesData","filteredMovies","movieRequests","map","get","responses","Promise","all","res","data","Response","Poster","Title","year","Year","poster","error","console","loadMovies","setTollywoodMoviesData","setBollywoodMoviesData","setHollywoodMoviesData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","fetchMovie","className","tollywoodMoviesData","bollywoodMoviesData","hollywoodMoviesData","category","idx","index","src","alt","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nimport CustomNavbar from \"../components/Navbar\";\nimport MovieCarousel from \"../components/MovieCarousel\";\nimport SearchBar from \"../components/SearchBar\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport \"./Home.css\";\n\n// Set Modal Root\nModal.setAppElement(\"#root\");\n\nconst Home = () => {\n  const [movie, setMovie] = useState(null);\n  const [verdict, setVerdict] = useState(\"Fetching Verdict...\");\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n  // ✅ Fetch only 2024 movies\n  const filter2024Movies = (movies) => {\n    return movies.filter((title) => title.includes(\"2024\")).slice(0, 5);\n  };\n\n  // ✅ Load Movie Data\n  useEffect(() => {\n    const fetchMoviesData = async (movies) => {\n      try {\n        const filteredMovies = filter2024Movies(movies);\n        const movieRequests = filteredMovies.map((title) =>\n          axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`)\n        );\n\n        const responses = await Promise.all(movieRequests);\n\n        return responses\n          .filter((res) => res.data.Response === \"True\" && res.data.Poster !== \"N/A\")\n          .map((res) => ({\n            title: res.data.Title,\n            year: res.data.Year,\n            poster: res.data.Poster\n          }));\n      } catch (error) {\n        console.error(\"Error fetching movie data from OMDb:\", error);\n        return [];\n      }\n    };\n\n    const loadMovies = async () => {\n      setTollywoodMoviesData(await fetchMoviesData(tollywoodMovies));\n      setBollywoodMoviesData(await fetchMoviesData(bollywoodMovies));\n      setHollywoodMoviesData(await fetchMoviesData(hollywoodMovies));\n    };\n\n    loadMovies();\n  }, []);\n\n  return (\n    <div>\n      <CustomNavbar />\n      <MovieCarousel />\n      <SearchBar onSearch={fetchMovie} />\n\n      {/* ✅ Movie Grids */}\n      <div className=\"movie-grids\">\n        {[\n          { title: \"Tollywood Movies\", movies: tollywoodMoviesData },\n          { title: \"Bollywood Movies\", movies: bollywoodMoviesData },\n          { title: \"Hollywood Movies\", movies: hollywoodMoviesData }\n        ].map((category, idx) => (\n          <div key={idx} className=\"movie-grid\">\n            <h2 className=\"grid-title\">{category.title}</h2>\n            <div className=\"movie-list\">\n              {category.movies.map((movie, index) => (\n                <div key={index} className=\"movie-card\">\n                  <img src={movie.poster} alt={movie.title} className=\"movie-img\" />\n                  <div className=\"movie-info\">\n                    <p className=\"movie-title\">{movie.title}</p>\n                    <p className=\"movie-year\">{movie.year}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}