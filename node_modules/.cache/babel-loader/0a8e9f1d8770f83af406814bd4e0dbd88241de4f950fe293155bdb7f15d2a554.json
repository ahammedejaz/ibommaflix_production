{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Carousel } from \"react-bootstrap\"; // ✅ Bootstrap Carousel\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./MovieCarousel.css\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCarousel = () => {\n  _s();\n  const [moviePosters, setMoviePosters] = useState([]);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n  useEffect(() => {\n    const fetchPosters = async () => {\n      if (!OMDB_API_KEY) {\n        console.error(\"OMDB API Key is missing. Check your .env file.\");\n        return;\n      }\n      try {\n        const getRandomMovies = (movies, count) => [...movies].sort(() => Math.random() - 0.5).slice(0, count);\n        const selectedMovies = [...getRandomMovies(tollywoodMovies, 24), ...getRandomMovies(bollywoodMovies, 24), ...getRandomMovies(hollywoodMovies, 24)];\n        const posterRequests = selectedMovies.map(title => axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`));\n        const responses = await Promise.all(posterRequests);\n        let posters = responses.filter(res => res.data.Response === \"True\" && res.data.Poster && res.data.Poster !== \"N/A\" && res.data.Poster !== \"\" // ✅ Ensure Valid Poster URL\n        ).map(res => res.data.Poster);\n\n        // ✅ Ensure Exactly 6 Posters Per Slide (Avoid \"N/A\" Placeholders)\n        while (posters.length % 6 !== 0) {\n          posters.push(\"https://via.placeholder.com/160x250?text=No+Image\"); // ✅ Fallback Image\n        }\n        setMoviePosters(posters);\n      } catch (error) {\n        console.error(\"Error fetching movie posters from OMDb:\", error);\n      }\n    };\n    fetchPosters();\n  }, []);\n\n  // ✅ Group images into sets of exactly 6\n  const chunkedPosters = [];\n  for (let i = 0; i < moviePosters.length; i += 6) {\n    chunkedPosters.push(moviePosters.slice(i, i + 6));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-carousel\",\n    children: chunkedPosters.length > 0 ? /*#__PURE__*/_jsxDEV(Carousel, {\n      indicators: false,\n      controls: true,\n      interval: 2500,\n      className: \"carousel-container\",\n      children: chunkedPosters.map((posterGroup, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n        className: \"carousel-slide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-group\",\n          children: posterGroup.map((poster, idx) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: poster,\n            alt: \"Movie Poster\",\n            className: \"poster-img\"\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"Loading posters...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCarousel, \"YI0iqAzJgdp4vxYqR3oACm2b7us=\");\n_c = MovieCarousel;\nexport default MovieCarousel;\nvar _c;\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"names":["React","useEffect","useState","axios","Carousel","tollywoodMovies","bollywoodMovies","hollywoodMovies","jsxDEV","_jsxDEV","MovieCarousel","_s","moviePosters","setMoviePosters","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","fetchPosters","console","error","getRandomMovies","movies","count","sort","Math","random","slice","selectedMovies","posterRequests","map","title","get","responses","Promise","all","posters","filter","res","data","Response","Poster","length","push","chunkedPosters","i","className","children","indicators","controls","interval","posterGroup","index","Item","poster","idx","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCarousel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Carousel } from \"react-bootstrap\"; // ✅ Bootstrap Carousel\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./MovieCarousel.css\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\n\nconst MovieCarousel = () => {\n  const [moviePosters, setMoviePosters] = useState([]);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n  useEffect(() => {\n  const fetchPosters = async () => {\n    if (!OMDB_API_KEY) {\n      console.error(\"OMDB API Key is missing. Check your .env file.\");\n      return;\n    }\n\n    try {\n      const getRandomMovies = (movies, count) =>\n        [...movies].sort(() => Math.random() - 0.5).slice(0, count);\n\n      const selectedMovies = [\n        ...getRandomMovies(tollywoodMovies, 24),\n        ...getRandomMovies(bollywoodMovies, 24),\n        ...getRandomMovies(hollywoodMovies, 24),\n      ];\n\n      const posterRequests = selectedMovies.map((title) =>\n        axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`)\n      );\n\n      const responses = await Promise.all(posterRequests);\n\n      let posters = responses\n        .filter(\n          (res) =>\n            res.data.Response === \"True\" &&\n            res.data.Poster &&\n            res.data.Poster !== \"N/A\" &&\n            res.data.Poster !== \"\" // ✅ Ensure Valid Poster URL\n        )\n        .map((res) => res.data.Poster);\n\n      // ✅ Ensure Exactly 6 Posters Per Slide (Avoid \"N/A\" Placeholders)\n      while (posters.length % 6 !== 0) {\n        posters.push(\"https://via.placeholder.com/160x250?text=No+Image\"); // ✅ Fallback Image\n      }\n\n      setMoviePosters(posters);\n    } catch (error) {\n      console.error(\"Error fetching movie posters from OMDb:\", error);\n    }\n  };\n\n  fetchPosters();\n}, []);\n\n  // ✅ Group images into sets of exactly 6\n  const chunkedPosters = [];\n  for (let i = 0; i < moviePosters.length; i += 6) {\n    chunkedPosters.push(moviePosters.slice(i, i + 6));\n  }\n\n  return (\n    <div className=\"movie-carousel\">\n      {chunkedPosters.length > 0 ? (\n        <Carousel indicators={false} controls={true} interval={2500} className=\"carousel-container\">\n          {chunkedPosters.map((posterGroup, index) => (\n            <Carousel.Item key={index} className=\"carousel-slide\">\n              <div className=\"poster-group\">\n                {posterGroup.map((poster, idx) => (\n                  <img key={idx} src={poster} alt=\"Movie Poster\" className=\"poster-img\" />\n                ))}\n              </div>\n            </Carousel.Item>\n          ))}\n        </Carousel>\n      ) : (\n        <p className=\"loading-text\">Loading posters...</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieCarousel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB,CAAC,CAAC;AAC5C,OAAO,sCAAsC;AAC7C,OAAO,qBAAqB;AAC5B,SAASC,eAAe,EAAEC,eAAe,EAAEC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMY,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAEvDhB,SAAS,CAAC,MAAM;IAChB,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACJ,YAAY,EAAE;QACjBK,OAAO,CAACC,KAAK,CAAC,gDAAgD,CAAC;QAC/D;MACF;MAEA,IAAI;QACF,MAAMC,eAAe,GAAGA,CAACC,MAAM,EAAEC,KAAK,KACpC,CAAC,GAAGD,MAAM,CAAC,CAACE,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAAC;QAE7D,MAAMK,cAAc,GAAG,CACrB,GAAGP,eAAe,CAAChB,eAAe,EAAE,EAAE,CAAC,EACvC,GAAGgB,eAAe,CAACf,eAAe,EAAE,EAAE,CAAC,EACvC,GAAGe,eAAe,CAACd,eAAe,EAAE,EAAE,CAAC,CACxC;QAED,MAAMsB,cAAc,GAAGD,cAAc,CAACE,GAAG,CAAEC,KAAK,IAC9C5B,KAAK,CAAC6B,GAAG,CAAC,8BAA8BD,KAAK,WAAWjB,YAAY,EAAE,CACxE,CAAC;QAED,MAAMmB,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,cAAc,CAAC;QAEnD,IAAIO,OAAO,GAAGH,SAAS,CACpBI,MAAM,CACJC,GAAG,IACFA,GAAG,CAACC,IAAI,CAACC,QAAQ,KAAK,MAAM,IAC5BF,GAAG,CAACC,IAAI,CAACE,MAAM,IACfH,GAAG,CAACC,IAAI,CAACE,MAAM,KAAK,KAAK,IACzBH,GAAG,CAACC,IAAI,CAACE,MAAM,KAAK,EAAE,CAAC;QAC3B,CAAC,CACAX,GAAG,CAAEQ,GAAG,IAAKA,GAAG,CAACC,IAAI,CAACE,MAAM,CAAC;;QAEhC;QACA,OAAOL,OAAO,CAACM,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;UAC/BN,OAAO,CAACO,IAAI,CAAC,mDAAmD,CAAC,CAAC,CAAC;QACrE;QAEA9B,eAAe,CAACuB,OAAO,CAAC;MAC1B,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF,CAAC;IAEDF,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEJ;EACA,MAAM0B,cAAc,GAAG,EAAE;EACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjC,YAAY,CAAC8B,MAAM,EAAEG,CAAC,IAAI,CAAC,EAAE;IAC/CD,cAAc,CAACD,IAAI,CAAC/B,YAAY,CAACe,KAAK,CAACkB,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC;EACnD;EAEA,oBACEpC,OAAA;IAAKqC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BH,cAAc,CAACF,MAAM,GAAG,CAAC,gBACxBjC,OAAA,CAACL,QAAQ;MAAC4C,UAAU,EAAE,KAAM;MAACC,QAAQ,EAAE,IAAK;MAACC,QAAQ,EAAE,IAAK;MAACJ,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EACxFH,cAAc,CAACd,GAAG,CAAC,CAACqB,WAAW,EAAEC,KAAK,kBACrC3C,OAAA,CAACL,QAAQ,CAACiD,IAAI;QAAaP,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eACnDtC,OAAA;UAAKqC,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1BI,WAAW,CAACrB,GAAG,CAAC,CAACwB,MAAM,EAAEC,GAAG,kBAC3B9C,OAAA;YAAe+C,GAAG,EAAEF,MAAO;YAACG,GAAG,EAAC,cAAc;YAACX,SAAS,EAAC;UAAY,GAA3DS,GAAG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0D,CACxE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC,GALYT,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,gBAEXpD,OAAA;MAAGqC,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAClD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClD,EAAA,CA5EID,aAAa;AAAAoD,EAAA,GAAbpD,aAAa;AA8EnB,eAAeA,aAAa;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}