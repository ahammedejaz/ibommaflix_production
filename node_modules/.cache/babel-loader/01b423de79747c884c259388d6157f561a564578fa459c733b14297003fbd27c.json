{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/ibommaflix/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\nimport { Modal, Box, Typography, Button } from \"@mui/material\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CustomNavbar from \"../components/Navbar\";\nimport MovieCarousel from \"../components/MovieCarousel\";\nimport SearchBar from \"../components/SearchBar\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport \"./Home.css\";\n\n// Function to calculate the Levenshtein distance for fuzzy search\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLevenshteinDistance = (a, b) => {\n  const tmp = [];\n  for (let i = 0; i <= a.length; i++) {\n    tmp[i] = [i];\n  }\n  for (let j = 0; j <= b.length; j++) {\n    tmp[0][j] = j;\n  }\n  for (let i = 1; i <= a.length; i++) {\n    for (let j = 1; j <= b.length; j++) {\n      tmp[i][j] = a[i - 1] === b[j - 1] ? tmp[i - 1][j - 1] : Math.min(tmp[i - 1][j - 1] + 1, Math.min(tmp[i][j - 1] + 1, tmp[i - 1][j] + 1));\n    }\n  }\n  return tmp[a.length][b.length];\n};\n\n// Function to suggest the closest movie title\nconst suggestClosestMovie = (searchTerm, movieList) => {\n  let minDistance = Infinity;\n  let closestMatch = null;\n  for (let movie of movieList) {\n    const distance = getLevenshteinDistance(searchTerm.toLowerCase(), movie.toLowerCase());\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestMatch = movie;\n    }\n  }\n  return closestMatch;\n};\nconst Home = () => {\n  _s();\n  const [tollywoodMoviesData, setTollywoodMoviesData] = useState([]);\n  const [bollywoodMoviesData, setBollywoodMoviesData] = useState([]);\n  const [hollywoodMoviesData, setHollywoodMoviesData] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [movie, setMovie] = useState(null);\n  const [verdict, setVerdict] = useState(\"Fetching Verdict...\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [suggestion, setSuggestion] = useState(\"\"); // For storing movie suggestion\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n  // Fetch Exactly 5 Valid Movie Posters with Caching\n  const fetchMoviesData = useCallback(async movies => {\n    try {\n      const cacheKey = `movies_${movies[0]}`; // Unique cache key based on the first movie\n      const cachedData = localStorage.getItem(cacheKey);\n      if (cachedData) {\n        return JSON.parse(cachedData);\n      }\n      let validMovies = [];\n      let retries = 0;\n      while (validMovies.length < 5 && retries < 10) {\n        let uniqueMovies = new Set();\n        while (uniqueMovies.size < 5) {\n          uniqueMovies.add(movies[Math.floor(Math.random() * movies.length)]);\n        }\n        const selectedMovies = Array.from(uniqueMovies);\n        const movieRequests = selectedMovies.map(title => axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`));\n        const responses = await Promise.all(movieRequests);\n        validMovies = responses.filter(res => res.data.Response === \"True\" && res.data.Poster !== \"N/A\").map(res => ({\n          title: res.data.Title,\n          year: res.data.Year,\n          poster: res.data.Poster\n        }));\n        retries++;\n      }\n      while (validMovies.length < 5) {\n        validMovies.push({\n          title: \"Coming Soon\",\n          year: \"N/A\",\n          poster: \"https://via.placeholder.com/160x250?text=Coming+Soon\"\n        });\n      }\n      localStorage.setItem(cacheKey, JSON.stringify(validMovies));\n      return validMovies;\n    } catch {\n      return [];\n    }\n  }, [OMDB_API_KEY]);\n  useEffect(() => {\n    const loadMovies = async () => {\n      setTollywoodMoviesData(await fetchMoviesData(tollywoodMovies));\n      setBollywoodMoviesData(await fetchMoviesData(bollywoodMovies));\n      setHollywoodMoviesData(await fetchMoviesData(hollywoodMovies));\n    };\n    loadMovies();\n  }, [fetchMoviesData]);\n\n  // Fetch Movie Data for Search\n  const fetchMovie = async searchTerm => {\n    if (!searchTerm) return;\n    try {\n      const cacheKey = `movie_${searchTerm}`;\n      const cachedData = localStorage.getItem(cacheKey);\n      if (cachedData) {\n        setMovie(JSON.parse(cachedData));\n        setIsModalOpen(true);\n      } else {\n        const res = await axios.get(`https://www.omdbapi.com/?t=${searchTerm}&apikey=${OMDB_API_KEY}`);\n        if (res.data.Response === \"True\") {\n          setMovie(res.data);\n          localStorage.setItem(cacheKey, JSON.stringify(res.data)); // Cache the data\n          setSuggestion(\"\"); // Clear any suggestions if movie found\n          fetchVerdict(res.data.imdbRating); // Fetch verdict based on IMDb rating\n          setIsModalOpen(true);\n        } else {\n          // If not found, suggest closest match\n          const closestMovie = suggestClosestMovie(searchTerm, [...tollywoodMovies, ...bollywoodMovies, ...hollywoodMovies]);\n          if (closestMovie) {\n            setSuggestion(`Did you mean: ${closestMovie}?`);\n          } else {\n            alert(\"Movie not found!\");\n          }\n        }\n      }\n    } catch {\n      alert(\"Error fetching movie data!\");\n    }\n  };\n\n  // Fetch Verdict Based on IMDb Rating\n  const fetchVerdict = rating => {\n    let movieVerdict = \"Fetching Verdict...\";\n    const imdbRating = parseFloat(rating);\n    if (imdbRating < 5) {\n      movieVerdict = \"Not worth watching\";\n    } else if (imdbRating >= 5 && imdbRating <= 6.5) {\n      movieVerdict = \"Average\";\n    } else if (imdbRating > 6.5 && imdbRating <= 8) {\n      movieVerdict = \"Good to watch\";\n    } else if (imdbRating > 8) {\n      movieVerdict = \"Worth watching\";\n    }\n    setVerdict(movieVerdict);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setMovie(null);\n    setVerdict(\"Fetching Verdict...\");\n    setSearchInput(\"\");\n    setSuggestion(\"\"); // Reset suggestion on close\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 text-center\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: fetchMovie,\n        searchInput: searchInput,\n        setSearchInput: setSearchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"tagline-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"tagline-heading\",\n        children: \"Where Quality & Clarity Matters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tagline-text\",\n        children: \"Watch Tollywood, Bollywood, Hollywood movies in HD, exclusively available on iBommaFlix.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), suggestion && /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          fontWeight: \"bold\"\n        },\n        children: suggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"movie-sections\",\n      children: [{\n        title: \"Tollywood Movies\",\n        data: tollywoodMoviesData\n      }, {\n        title: \"Bollywood Movies\",\n        data: bollywoodMoviesData\n      }, {\n        title: \"Hollywood Movies\",\n        data: hollywoodMoviesData\n      }].map((category, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-gold text-center\",\n          children: category.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-group\",\n          children: category.data.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.poster,\n              alt: movie.title,\n              className: \"poster-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"play-button\",\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"poster-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"poster-year\",\n              children: movie.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isModalOpen,\n      onClose: closeModal,\n      \"aria-labelledby\": \"movie-modal-title\",\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"modal-box\",\n        sx: {\n          bgcolor: \"black\",\n          color: \"white\",\n          p: 3,\n          borderRadius: 2,\n          width: 400,\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"movie-modal-title\",\n          variant: \"h5\",\n          sx: {\n            fontWeight: \"bold\",\n            mb: 2\n          },\n          children: [movie === null || movie === void 0 ? void 0 : movie.Title, \" (\", movie === null || movie === void 0 ? void 0 : movie.Year, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie === null || movie === void 0 ? void 0 : movie.Poster,\n          alt: movie === null || movie === void 0 ? void 0 : movie.Title,\n          className: \"movie-modal-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 54\n          }, this), \" \", movie === null || movie === void 0 ? void 0 : movie.Genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IMDb Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 39\n          }, this), \" \", movie === null || movie === void 0 ? void 0 : movie.imdbRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 39\n          }, this), \" \", movie === null || movie === void 0 ? void 0 : movie.Plot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: \"gold\",\n            mt: 2\n          },\n          children: verdict\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: closeModal,\n          sx: {\n            mt: 2\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Wa3IHIHwGqxc5vDFM16JrGjXtdY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Container","Modal","Box","Typography","Button","CustomNavbar","MovieCarousel","SearchBar","tollywoodMovies","bollywoodMovies","hollywoodMovies","jsxDEV","_jsxDEV","getLevenshteinDistance","a","b","tmp","i","length","j","Math","min","suggestClosestMovie","searchTerm","movieList","minDistance","Infinity","closestMatch","movie","distance","toLowerCase","Home","_s","tollywoodMoviesData","setTollywoodMoviesData","bollywoodMoviesData","setBollywoodMoviesData","hollywoodMoviesData","setHollywoodMoviesData","searchInput","setSearchInput","setMovie","verdict","setVerdict","isModalOpen","setIsModalOpen","suggestion","setSuggestion","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","fetchMoviesData","movies","cacheKey","cachedData","localStorage","getItem","JSON","parse","validMovies","retries","uniqueMovies","Set","size","add","floor","random","selectedMovies","Array","from","movieRequests","map","title","get","responses","Promise","all","filter","res","data","Response","Poster","Title","year","Year","poster","push","setItem","stringify","loadMovies","fetchMovie","fetchVerdict","imdbRating","closestMovie","alert","rating","movieVerdict","parseFloat","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","style","color","fontWeight","category","index","src","alt","open","onClose","sx","display","alignItems","justifyContent","bgcolor","p","borderRadius","width","textAlign","id","variant","mb","mt","Genre","Plot","onClick","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/ibommaflix/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\nimport { Modal, Box, Typography, Button } from \"@mui/material\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CustomNavbar from \"../components/Navbar\";\nimport MovieCarousel from \"../components/MovieCarousel\";\nimport SearchBar from \"../components/SearchBar\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport \"./Home.css\";\n\n// Function to calculate the Levenshtein distance for fuzzy search\nconst getLevenshteinDistance = (a, b) => {\n  const tmp = [];\n  for (let i = 0; i <= a.length; i++) {\n    tmp[i] = [i];\n  }\n  for (let j = 0; j <= b.length; j++) {\n    tmp[0][j] = j;\n  }\n  for (let i = 1; i <= a.length; i++) {\n    for (let j = 1; j <= b.length; j++) {\n      tmp[i][j] = a[i - 1] === b[j - 1] ? tmp[i - 1][j - 1] : Math.min(tmp[i - 1][j - 1] + 1, Math.min(tmp[i][j - 1] + 1, tmp[i - 1][j] + 1));\n    }\n  }\n  return tmp[a.length][b.length];\n};\n\n// Function to suggest the closest movie title\nconst suggestClosestMovie = (searchTerm, movieList) => {\n  let minDistance = Infinity;\n  let closestMatch = null;\n  for (let movie of movieList) {\n    const distance = getLevenshteinDistance(searchTerm.toLowerCase(), movie.toLowerCase());\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestMatch = movie;\n    }\n  }\n  return closestMatch;\n};\n\nconst Home = () => {\n  const [tollywoodMoviesData, setTollywoodMoviesData] = useState([]);\n  const [bollywoodMoviesData, setBollywoodMoviesData] = useState([]);\n  const [hollywoodMoviesData, setHollywoodMoviesData] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [movie, setMovie] = useState(null);\n  const [verdict, setVerdict] = useState(\"Fetching Verdict...\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [suggestion, setSuggestion] = useState(\"\"); // For storing movie suggestion\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n  // Fetch Exactly 5 Valid Movie Posters with Caching\n  const fetchMoviesData = useCallback(async (movies) => {\n    try {\n      const cacheKey = `movies_${movies[0]}`; // Unique cache key based on the first movie\n      const cachedData = localStorage.getItem(cacheKey);\n\n      if (cachedData) {\n        return JSON.parse(cachedData);\n      }\n\n      let validMovies = [];\n      let retries = 0;\n\n      while (validMovies.length < 5 && retries < 10) {\n        let uniqueMovies = new Set();\n        while (uniqueMovies.size < 5) {\n          uniqueMovies.add(movies[Math.floor(Math.random() * movies.length)]);\n        }\n\n        const selectedMovies = Array.from(uniqueMovies);\n        const movieRequests = selectedMovies.map((title) =>\n          axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`)\n        );\n        const responses = await Promise.all(movieRequests);\n\n        validMovies = responses\n          .filter((res) => res.data.Response === \"True\" && res.data.Poster !== \"N/A\")\n          .map((res) => ({\n            title: res.data.Title,\n            year: res.data.Year,\n            poster: res.data.Poster,\n          }));\n\n        retries++;\n      }\n\n      while (validMovies.length < 5) {\n        validMovies.push({\n          title: \"Coming Soon\",\n          year: \"N/A\",\n          poster: \"https://via.placeholder.com/160x250?text=Coming+Soon\",\n        });\n      }\n\n      localStorage.setItem(cacheKey, JSON.stringify(validMovies));\n\n      return validMovies;\n    } catch {\n      return [];\n    }\n  }, [OMDB_API_KEY]);\n\n  useEffect(() => {\n    const loadMovies = async () => {\n      setTollywoodMoviesData(await fetchMoviesData(tollywoodMovies));\n      setBollywoodMoviesData(await fetchMoviesData(bollywoodMovies));\n      setHollywoodMoviesData(await fetchMoviesData(hollywoodMovies));\n    };\n    loadMovies();\n  }, [fetchMoviesData]);\n\n  // Fetch Movie Data for Search\n  const fetchMovie = async (searchTerm) => {\n    if (!searchTerm) return;\n    try {\n      const cacheKey = `movie_${searchTerm}`;\n      const cachedData = localStorage.getItem(cacheKey);\n\n      if (cachedData) {\n        setMovie(JSON.parse(cachedData));\n        setIsModalOpen(true);\n      } else {\n        const res = await axios.get(`https://www.omdbapi.com/?t=${searchTerm}&apikey=${OMDB_API_KEY}`);\n        if (res.data.Response === \"True\") {\n          setMovie(res.data);\n          localStorage.setItem(cacheKey, JSON.stringify(res.data)); // Cache the data\n          setSuggestion(\"\"); // Clear any suggestions if movie found\n          fetchVerdict(res.data.imdbRating); // Fetch verdict based on IMDb rating\n          setIsModalOpen(true);\n        } else {\n          // If not found, suggest closest match\n          const closestMovie = suggestClosestMovie(searchTerm, [...tollywoodMovies, ...bollywoodMovies, ...hollywoodMovies]);\n          if (closestMovie) {\n            setSuggestion(`Did you mean: ${closestMovie}?`);\n          } else {\n            alert(\"Movie not found!\");\n          }\n        }\n      }\n    } catch {\n      alert(\"Error fetching movie data!\");\n    }\n  };\n\n  // Fetch Verdict Based on IMDb Rating\n  const fetchVerdict = (rating) => {\n    let movieVerdict = \"Fetching Verdict...\";\n\n    const imdbRating = parseFloat(rating);\n\n    if (imdbRating < 5) {\n      movieVerdict = \"Not worth watching\";\n    } else if (imdbRating >= 5 && imdbRating <= 6.5) {\n      movieVerdict = \"Average\";\n    } else if (imdbRating > 6.5 && imdbRating <= 8) {\n      movieVerdict = \"Good to watch\";\n    } else if (imdbRating > 8) {\n      movieVerdict = \"Worth watching\";\n    }\n\n    setVerdict(movieVerdict);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setMovie(null);\n    setVerdict(\"Fetching Verdict...\");\n    setSearchInput(\"\");\n    setSuggestion(\"\"); // Reset suggestion on close\n  };\n\n  return (\n    <div>\n      <CustomNavbar />\n      <MovieCarousel />\n\n      {/* Search Bar */}\n      <Container className=\"mt-3 text-center\">\n        <SearchBar onSearch={fetchMovie} searchInput={searchInput} setSearchInput={setSearchInput} />\n      </Container>\n\n      {/* Tagline */}\n      <Container className=\"tagline-container\">\n        <h2 className=\"tagline-heading\">Where Quality & Clarity Matters</h2>\n        <p className=\"tagline-text\">\n          Watch Tollywood, Bollywood, Hollywood movies in HD, exclusively available on iBommaFlix.\n        </p>\n      </Container>\n\n      {/* Suggestion Message */}\n      {suggestion && (\n        <Container className=\"text-center\">\n          <p style={{ color: \"red\", fontWeight: \"bold\" }}>{suggestion}</p>\n        </Container>\n      )}\n\n      {/* Movie Sections */}\n      <Container className=\"movie-sections\">\n        {[{ title: \"Tollywood Movies\", data: tollywoodMoviesData },\n          { title: \"Bollywood Movies\", data: bollywoodMoviesData },\n          { title: \"Hollywood Movies\", data: hollywoodMoviesData }].map((category, i) => (\n          <div key={i} className=\"movie-category\">\n            <h2 className=\"text-gold text-center\">{category.title}</h2>\n            <div className=\"poster-group\">\n              {category.data.map((movie, index) => (\n                <div key={index} className=\"poster-card\">\n                  <img src={movie.poster} alt={movie.title} className=\"poster-img\" />\n                  <div className=\"play-button\">▶</div>\n                  <p className=\"poster-title\">{movie.title}</p>\n                  <p className=\"poster-year\">{movie.year}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </Container>\n\n      {/* Material-UI Movie Popup Modal */}\n      <Modal\n        open={isModalOpen}\n        onClose={closeModal}\n        aria-labelledby=\"movie-modal-title\"\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Box\n          className=\"modal-box\"\n          sx={{\n            bgcolor: \"black\",\n            color: \"white\",\n            p: 3,\n            borderRadius: 2,\n            width: 400,\n            textAlign: \"center\",\n          }}\n        >\n          <Typography id=\"movie-modal-title\" variant=\"h5\" sx={{ fontWeight: \"bold\", mb: 2 }}>\n            {movie?.Title} ({movie?.Year})\n          </Typography>\n          <img src={movie?.Poster} alt={movie?.Title} className=\"movie-modal-img\" />\n          <Typography variant=\"body1\" sx={{ mt: 2 }}><strong>Genre:</strong> {movie?.Genre}</Typography>\n          <Typography variant=\"body1\"><strong>IMDb Rating:</strong> {movie?.imdbRating}</Typography>\n          <Typography variant=\"body1\"><strong>Plot:</strong> {movie?.Plot}</Typography>\n          <Typography variant=\"h6\" sx={{ color: \"gold\", mt: 2 }}>{verdict}</Typography>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={closeModal}\n            sx={{ mt: 2 }}\n          >\n            Close\n          </Button>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}