{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/ibommaflix/frontend/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, List, ListItem, ListItemText, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch,\n  searchInput,\n  setSearchInput\n}) => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Function to fetch movie suggestions\n  const fetchSuggestions = async query => {\n    if (!query) {\n      setSuggestions([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await axios.get(`https://www.omdbapi.com/?s=${query}&apikey=${process.env.REACT_APP_OMDB_API_KEY}`);\n      if (res.data.Response === \"True\") {\n        setSuggestions(res.data.Search);\n      } else {\n        setSuggestions([]);\n      }\n    } catch {\n      setSuggestions([]);\n    }\n    setLoading(false);\n  };\n\n  // Handle input changes and search suggestions\n  const handleInputChange = event => {\n    const inputValue = event.target.value;\n    setSearchInput(inputValue);\n    fetchSuggestions(inputValue);\n  };\n\n  // Handle suggestion click\n  const handleSuggestionClick = suggestion => {\n    setSearchInput(suggestion.Title);\n    setSuggestions([]);\n    onSearch(suggestion.Title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Search Movie\",\n      variant: \"outlined\",\n      value: searchInput,\n      onChange: handleInputChange,\n      onBlur: () => setTimeout(() => setSuggestions([]), 200) // Hide suggestions after focus is lost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        maxHeight: 200,\n        overflowY: \"auto\",\n        border: \"1px solid #ccc\",\n        position: \"absolute\",\n        zIndex: 10\n      },\n      children: suggestions.map((movie, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => handleSuggestionClick(movie),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"D/QLT7EhXMeFAv4wvKYEVxhaIHI=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","TextField","List","ListItem","ListItemText","Button","jsxDEV","_jsxDEV","SearchBar","onSearch","searchInput","setSearchInput","_s","suggestions","setSuggestions","loading","setLoading","fetchSuggestions","query","res","axios","get","process","env","REACT_APP_OMDB_API_KEY","data","Response","Search","handleInputChange","event","inputValue","target","value","handleSuggestionClick","suggestion","Title","children","fullWidth","label","variant","onChange","onBlur","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","length","sx","maxHeight","overflowY","border","position","zIndex","map","movie","index","button","onClick","primary","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/ibommaflix/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, List, ListItem, ListItemText, Button } from \"@mui/material\";\n\nconst SearchBar = ({ onSearch, searchInput, setSearchInput }) => {\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Function to fetch movie suggestions\n  const fetchSuggestions = async (query) => {\n    if (!query) {\n      setSuggestions([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await axios.get(`https://www.omdbapi.com/?s=${query}&apikey=${process.env.REACT_APP_OMDB_API_KEY}`);\n      if (res.data.Response === \"True\") {\n        setSuggestions(res.data.Search);\n      } else {\n        setSuggestions([]);\n      }\n    } catch {\n      setSuggestions([]);\n    }\n    setLoading(false);\n  };\n\n  // Handle input changes and search suggestions\n  const handleInputChange = (event) => {\n    const inputValue = event.target.value;\n    setSearchInput(inputValue);\n    fetchSuggestions(inputValue);\n  };\n\n  // Handle suggestion click\n  const handleSuggestionClick = (suggestion) => {\n    setSearchInput(suggestion.Title);\n    setSuggestions([]);\n    onSearch(suggestion.Title);\n  };\n\n  return (\n    <div>\n      <TextField\n        fullWidth\n        label=\"Search Movie\"\n        variant=\"outlined\"\n        value={searchInput}\n        onChange={handleInputChange}\n        onBlur={() => setTimeout(() => setSuggestions([]), 200)} // Hide suggestions after focus is lost\n      />\n      {suggestions.length > 0 && (\n        <List sx={{ maxHeight: 200, overflowY: \"auto\", border: \"1px solid #ccc\", position: \"absolute\", zIndex: 10 }}>\n          {suggestions.map((movie, index) => (\n            <ListItem button key={index} onClick={() => handleSuggestionClick(movie)}>\n              <ListItemText primary={movie.Title} />\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMiB,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,IAAI,CAACA,KAAK,EAAE;MACVJ,cAAc,CAAC,EAAE,CAAC;MAClB;IACF;IACAE,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,8BAA8BH,KAAK,WAAWI,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAE,CAAC;MAC/G,IAAIL,GAAG,CAACM,IAAI,CAACC,QAAQ,KAAK,MAAM,EAAE;QAChCZ,cAAc,CAACK,GAAG,CAACM,IAAI,CAACE,MAAM,CAAC;MACjC,CAAC,MAAM;QACLb,cAAc,CAAC,EAAE,CAAC;MACpB;IACF,CAAC,CAAC,MAAM;MACNA,cAAc,CAAC,EAAE,CAAC;IACpB;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCrB,cAAc,CAACmB,UAAU,CAAC;IAC1Bb,gBAAgB,CAACa,UAAU,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMG,qBAAqB,GAAIC,UAAU,IAAK;IAC5CvB,cAAc,CAACuB,UAAU,CAACC,KAAK,CAAC;IAChCrB,cAAc,CAAC,EAAE,CAAC;IAClBL,QAAQ,CAACyB,UAAU,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACE5B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA,CAACN,SAAS;MACRoC,SAAS;MACTC,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAC,UAAU;MAClBP,KAAK,EAAEtB,WAAY;MACnB8B,QAAQ,EAAEZ,iBAAkB;MAC5Ba,MAAM,EAAEA,CAAA,KAAMC,UAAU,CAAC,MAAM5B,cAAc,CAAC,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,EACDjC,WAAW,CAACkC,MAAM,GAAG,CAAC,iBACrBxC,OAAA,CAACL,IAAI;MAAC8C,EAAE,EAAE;QAAEC,SAAS,EAAE,GAAG;QAAEC,SAAS,EAAE,MAAM;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAAjB,QAAA,EACzGvB,WAAW,CAACyC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5BjD,OAAA,CAACJ,QAAQ;QAACsD,MAAM;QAAaC,OAAO,EAAEA,CAAA,KAAMzB,qBAAqB,CAACsB,KAAK,CAAE;QAAAnB,QAAA,eACvE7B,OAAA,CAACH,YAAY;UAACuD,OAAO,EAAEJ,KAAK,CAACpB;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADlBU,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CA3DIJ,SAAS;AAAAoD,EAAA,GAATpD,SAAS;AA6Df,eAAeA,SAAS;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}