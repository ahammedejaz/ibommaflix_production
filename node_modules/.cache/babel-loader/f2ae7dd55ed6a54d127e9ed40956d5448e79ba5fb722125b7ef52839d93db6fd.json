{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./MovieCarousel.css\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCarousel = () => {\n  _s();\n  const [tollywoodPosters, setTollywoodPosters] = useState([]);\n  const [bollywoodPosters, setBollywoodPosters] = useState([]);\n  const [hollywoodPosters, setHollywoodPosters] = useState([]);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n  useEffect(() => {\n    const fetchPosters = async movies => {\n      try {\n        const posterRequests = movies.map(title => axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`));\n        const responses = await Promise.all(posterRequests);\n        return responses.filter(res => res.data.Response === \"True\" && res.data.Poster !== \"N/A\").map(res => res.data.Poster);\n      } catch (error) {\n        console.error(\"Error fetching movie posters from OMDb:\", error);\n        return [];\n      }\n    };\n    const loadPosters = async () => {\n      setTollywoodPosters(await fetchPosters(tollywoodMovies.slice(0, 5)));\n      setBollywoodPosters(await fetchPosters(bollywoodMovies.slice(0, 5)));\n      setHollywoodPosters(await fetchPosters(hollywoodMovies.slice(0, 5)));\n    };\n    loadPosters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Tollywood Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: tollywoodPosters.map((poster, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: poster,\n        alt: \"Movie Poster\",\n        className: \"movie-poster\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Bollywood Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: bollywoodPosters.map((poster, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: poster,\n        alt: \"Movie Poster\",\n        className: \"movie-poster\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Hollywood Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: hollywoodPosters.map((poster, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: poster,\n        alt: \"Movie Poster\",\n        className: \"movie-poster\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCarousel, \"vc57DOB5iV/KUb60IZJcLpvmJeU=\");\n_c = MovieCarousel;\nexport default MovieCarousel;\nvar _c;\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"names":["React","useEffect","useState","axios","tollywoodMovies","bollywoodMovies","hollywoodMovies","jsxDEV","_jsxDEV","MovieCarousel","_s","tollywoodPosters","setTollywoodPosters","bollywoodPosters","setBollywoodPosters","hollywoodPosters","setHollywoodPosters","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","fetchPosters","movies","posterRequests","map","title","get","responses","Promise","all","filter","res","data","Response","Poster","error","console","loadPosters","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","poster","index","src","alt","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCarousel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./MovieCarousel.css\";\nimport { tollywoodMovies, bollywoodMovies, hollywoodMovies } from \"../data/movieList\";\n\nconst MovieCarousel = () => {\n  const [tollywoodPosters, setTollywoodPosters] = useState([]);\n  const [bollywoodPosters, setBollywoodPosters] = useState([]);\n  const [hollywoodPosters, setHollywoodPosters] = useState([]);\n  const OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n  useEffect(() => {\n    const fetchPosters = async (movies) => {\n      try {\n        const posterRequests = movies.map((title) =>\n          axios.get(`https://www.omdbapi.com/?t=${title}&apikey=${OMDB_API_KEY}`)\n        );\n\n        const responses = await Promise.all(posterRequests);\n\n        return responses\n          .filter((res) => res.data.Response === \"True\" && res.data.Poster !== \"N/A\")\n          .map((res) => res.data.Poster);\n      } catch (error) {\n        console.error(\"Error fetching movie posters from OMDb:\", error);\n        return [];\n      }\n    };\n\n    const loadPosters = async () => {\n      setTollywoodPosters(await fetchPosters(tollywoodMovies.slice(0, 5)));\n      setBollywoodPosters(await fetchPosters(bollywoodMovies.slice(0, 5)));\n      setHollywoodPosters(await fetchPosters(hollywoodMovies.slice(0, 5)));\n    };\n\n    loadPosters();\n  }, []);\n\n  return (\n    <div className=\"movie-section\">\n      <h2 className=\"section-title\">Tollywood Movies</h2>\n      <div className=\"movie-list\">\n        {tollywoodPosters.map((poster, index) => (\n          <img key={index} src={poster} alt=\"Movie Poster\" className=\"movie-poster\" />\n        ))}\n      </div>\n\n      <h2 className=\"section-title\">Bollywood Movies</h2>\n      <div className=\"movie-list\">\n        {bollywoodPosters.map((poster, index) => (\n          <img key={index} src={poster} alt=\"Movie Poster\" className=\"movie-poster\" />\n        ))}\n      </div>\n\n      <h2 className=\"section-title\">Hollywood Movies</h2>\n      <div className=\"movie-list\">\n        {hollywoodPosters.map((poster, index) => (\n          <img key={index} src={poster} alt=\"Movie Poster\" className=\"movie-poster\" />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}