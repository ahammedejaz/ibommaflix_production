{"ast":null,"code":"var _jsxFileName = \"/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./MovieCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  movie,\n  setVerdict\n}) => {\n  _s();\n  const [localVerdict, setLocalVerdict] = useState(\"\");\n  useEffect(() => {\n    if (!movie) return;\n    axios.post(\"http://127.0.0.1:4121/api/sentiment/analyze\", {\n      reviews: [\"This movie is amazing!\", \"Loved the storyline!\"],\n      movie_title: movie.title\n    }).then(res => {\n      console.log(\"üé¨ Verdict Received:\", res.data.verdict);\n      setLocalVerdict(res.data.verdict);\n      setVerdict(res.data.verdict); // ‚úÖ Pass verdict to Home.js\n    }).catch(err => console.error(\"‚ùå Error fetching verdict:\", err));\n  }, [movie]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster,\n        alt: movie.title,\n        className: \"movie-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [movie.title, \" (\", movie.year, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }, this), \" \", movie.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"IMDb Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 12\n        }, this), \" \", movie.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"plot\",\n          children: movie.plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"verdict\",\n        children: localVerdict || \"Fetching Verdict...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCard, \"mr01qUJwdwTrpPTwP1Tav9fv0co=\");\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MovieCard","movie","setVerdict","_s","localVerdict","setLocalVerdict","post","reviews","movie_title","title","then","res","console","log","data","verdict","catch","err","error","className","children","src","poster","alt","fileName","_jsxFileName","lineNumber","columnNumber","year","genre","rating","plot","_c","$RefreshReg$"],"sources":["/Users/syedejazahammed/Documents/GitHub/true_review/frontend/src/components/MovieCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./MovieCard.css\";\n\nconst MovieCard = ({ movie, setVerdict }) => {\n  const [localVerdict, setLocalVerdict] = useState(\"\");\n\n  useEffect(() => {\n    if (!movie) return;\n\n    axios\n      .post(\"http://127.0.0.1:4121/api/sentiment/analyze\", {\n        reviews: [\"This movie is amazing!\", \"Loved the storyline!\"],\n        movie_title: movie.title\n      })\n      .then((res) => {\n        console.log(\"üé¨ Verdict Received:\", res.data.verdict);\n        setLocalVerdict(res.data.verdict);\n        setVerdict(res.data.verdict); // ‚úÖ Pass verdict to Home.js\n      })\n      .catch((err) => console.error(\"‚ùå Error fetching verdict:\", err));\n  }, [movie]);\n\n  return (\n    <div className=\"movie-card\">\n      <div className=\"poster-container\">\n        <img src={movie.poster} alt={movie.title} className=\"movie-poster\" />\n      </div>\n      <div className=\"movie-details\">\n        <h3>{movie.title} ({movie.year})</h3>\n        <p><strong>Genre:</strong> {movie.genre}</p>\n        <p><strong>IMDb Rating:</strong> {movie.rating}</p>\n        <div className=\"plot-container\">\n          <p className=\"plot\">{movie.plot}</p>\n        </div>\n        <h3 className=\"verdict\">{localVerdict || \"Fetching Verdict...\"}</h3> {/* ‚úÖ Verdict updates properly */}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}